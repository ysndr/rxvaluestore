plugins {
    id "me.tatarka.retrolambda" version "3.2.5"
}
apply plugin: 'java'
apply plugin: "net.ltgt.apt"

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
//    compile 'com.google.guava:guava:20.0'
    compile 'com.github.pakoito:RxTuples:1.0.0'
    // rxjava
    compile 'io.reactivex:rxjava:1.2.6'
    // Immutables
    apt "org.immutables:value:2.4.3"
    // for annotation processor
    compileOnly 'org.immutables:value:2.4.3:annotations'
    // annotation-only artifact
    compileOnly 'org.immutables:builder:2.4.3'
    // there are only annotations anyway
    compileOnly 'org.immutables:gson:2.4.3:annotations'
    // annotation-only artifact
}


def fixPom(pom) {
    pom.withXml {
        def root = asNode()
        root.appendNode('description', POM_DESCRIPTION)
        root.appendNode('name', POM_NAME)
        root.appendNode('url', POM_URL)
        def scm = root.appendNode('scm')
        scm.appendNode('url', POM_SCM_URL)
        scm.appendNode('connection', POM_SCM_CONNECTION)
        scm.appendNode('developerConnection', POM_SCM_DEV_CONNECTION)
        def developer = root.appendNode('developers').appendNode('developer')
        developer.appendNode('id', POM_DEVELOPER_ID)
        developer.appendNode('name', POM_DEVELOPER_NAME)
        developer.appendNode('email', POM_DEVELOPER_EMAIL)
        def license = root.appendNode('licenses').appendNode('license')
        license.appendNode('name', POM_LICENCE_NAME)
        license.appendNode('url', POM_LICENCE_URL)
        license.appendNode('distribution', POM_LICENCE_DIST)
    }
}

publishing {
    publications {
        libraryrelease(MavenPublication) {
            groupId project.group
            version project.version
            artifactId POM_ARTIFACT_ID

            from components.java

            artifact sourcesJar
            artifact javadocJar
            fixPom(pom)
        }
    }
}

sourceSets {
    generated{
        java.srcDir "${buildDir}/generated/src/java/"
    }
}


compileJava{
    source    += sourceSets.generated.java
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


artifacts {
    archives javadocJar
    archives sourcesJar
}


sourceCompatibility = "1.8"
targetCompatibility = "1.8"
